{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/Button/Button.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/ImageError/Cat-cry.jpg","components/ImageError/ImageError.jsx","components/Modal/Modal.jsx","services/ImageApi.jsx","components/App/App.jsx","index.js"],"names":["Searchbar","onSubmit","useState","imageName","setImageName","className","event","preventDefault","trim","toast","error","type","name","placeholder","value","onChange","currentTarget","toLowerCase","Button","onClick","ImageGalleryItem","image","largeImg","webformatURL","tags","src","alt","ImageGallery","images","map","largeImageURL","id","ImageError","message","role","errorImage","width","modalRoot","document","querySelector","Modal","props","useEffect","window","addEventListener","handleKeyDown","console","log","e","code","onClose","createPortal","target","children","imageAPI","fetchImage","page","fetch","then","response","ok","json","data","hits","Status","App","setImages","setError","setLargeImg","setPage","status","setStatus","currentName","setCurrentName","fetchApi","useCallback","result","length","catch","finally","myScroll","scrollTo","top","documentElement","scrollHeight","behavior","newImage","autoClose","color","height","timeout","url","ReactDOM","render","StrictMode","getElementById"],"mappings":"0UAIe,SAASA,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAgBA,OACE,wBAAQC,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaJ,SAbZ,SAAAK,GACnBA,EAAMC,iBAEmB,KAArBJ,EAAUK,QAIdP,EAASE,GACTC,EAAa,KAJXK,IAAMC,MAAM,kCASZ,UACE,wBAAQC,KAAK,SAASN,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVM,KAAK,OACLC,KAAK,YAGLC,YAAY,2BACZC,MAAOX,EACPY,SA7BiB,SAAAT,GAAK,OAC5BF,EAAaE,EAAMU,cAAcF,MAAMG,uBCL3C,IAceC,EAdA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAChB,OACE,mCACE,wBAAQd,UAAU,SAASc,QAASA,EAApC,0BCgBSC,EAnBU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzBC,EAAuBF,EAAvBE,aAAcC,EAASH,EAATG,KACtB,OACE,oBAAIL,QAASG,EAAUjB,UAAU,mBAAjC,SACE,qBAAKoB,IAAKF,EAAcG,IAAKF,EAAMnB,UAAU,8BCHpC,SAASsB,EAAT,GAA6C,IAArBC,EAAoB,EAApBA,OAAQN,EAAY,EAAZA,SAC7C,OACE,mCACE,oBAAIjB,UAAU,eAAd,SACGuB,EAAOC,KAAI,SAAAR,GACV,OACE,cAAC,EAAD,CAEEA,MAAOA,EACPC,SAAU,WACRA,EAASD,EAAMS,iBAHZT,EAAMU,WCXV,UAA0B,oCCkB1BC,G,MAbI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACE,sBAAKC,KAAK,QAAQ7B,UAAU,cAA5B,UACE,qBAAKoB,IAAKU,EAAYC,MAAM,MAAMV,IAAI,YACtC,4BAAIO,SCNJI,EAAYC,SAASC,cAAc,eA4B1BC,EA1BD,SAAAC,GACZC,qBAAU,WACRC,OAAOC,iBAAiB,UAAWC,GACnCC,QAAQC,IAAI,YAEd,IAAMF,EAAgB,SAAAG,GACL,WAAXA,EAAEC,MACJR,EAAMS,WASV,OAAOC,uBACL,qBAAK9C,UAAU,UAAUc,QAPE,SAAA6B,GACvBA,EAAEI,SAAWJ,EAAEhC,eACjByB,EAAMS,WAKR,SACE,qBAAK7C,UAAU,QAAf,SAAwBoC,EAAMY,aAEhChB,ICXJ,IAEeiB,EAFE,CAAEC,WAXnB,SAAoBpD,EAAWqD,GAC7B,OAAOC,MAAM,GAAD,OAHG,0BAGH,eACQtD,EADR,iBAC0BqD,EAD1B,gBAJE,qCAIF,yDAEVE,MAAK,SAAAC,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OAAOH,MAAK,SAAAI,GAAI,OAAIA,EAAKC,aCMzCC,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WAGG,SAASC,IACtB,MAAkC/D,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA4BF,mBAAS,IAArC,mBAAO0B,EAAP,KAAesC,EAAf,KACA,EAA0BhE,mBAAS,MAAnC,mBAAOQ,EAAP,KAAcyD,EAAd,KACA,EAAgCjE,mBAAS,MAAzC,mBAAOoB,EAAP,KAAiB8C,EAAjB,KACA,EAAwBlE,mBAAS,GAAjC,mBAAOsD,EAAP,KAAaa,EAAb,KACA,EAA4BnE,mBAAS8D,GAArC,mBAAOM,EAAP,KAAeC,EAAf,KACA,EAAsCrE,mBAAS,IAA/C,mBAAOsE,EAAP,KAAoBC,EAApB,KAEMC,EAAWC,uBAAY,WAC3BrB,EACGC,WAAWiB,EAAahB,GACxBE,MAAK,SAAAkB,GACJxE,EAAa,IACbmE,EAAUP,GACVE,GAAU,SAAAtC,GAAM,4BAAQA,GAAR,YAAmBgD,OACnCP,GAAQ,SAAAb,GAAI,OAAIA,EAAO,KAClBoB,EAAOC,OAIVV,EAAS,OAHTA,EAAS,6BAAD,OAA8BhE,IACtCoE,EAAUP,OAKbc,OAAM,SAAApE,GACLyD,EAAS,4BAAD,OAA6BhE,IACrCoE,EAAUP,MAEXe,SAAQ,WACPC,SAEH,CAACT,EAAWJ,EAAUD,EAAW/D,EAAWqD,EAAMgB,IAErD9B,qBAAU,WACHvC,IAILoE,EAAUP,GACVS,EAAetE,GACXA,IAAcqE,GAChBE,EAASvE,EAAWqD,MAErB,CAACrD,EAAWuE,EAAUlB,EAAMgB,IAE/B,IAcMQ,EAAW,WACfrC,OAAOsC,SAAS,CACdC,IAAK5C,SAAS6C,gBAAgBC,aAC9BC,SAAU,YAId,OACE,sBAAKhF,UAAU,MAAf,UACE,cAACL,EAAD,CAAWC,SAvBU,SAAAqF,GACnBA,IAAad,GACfpE,EAAakF,GACbpB,EAAU,IACVG,EAAQ,IAER5D,IAAMC,MAAM,wCAkBZ,cAAC,IAAD,CAAgB6E,UAAW,MAE1BjB,IAAWN,EAAc,+DAA0C,KAEnEM,IAAWN,EACV,cAAC,IAAD,CACErD,KAAK,OACL6E,MAAM,UACNC,OAAQ,IACRrD,MAAO,IACPsD,QAAS,MAET,KAEHpB,IAAWN,EAAkB,cAAC,EAAD,CAAY/B,QAASvB,IAAY,KAE9D4D,IAAWN,EACV,qCACE,cAACrC,EAAD,CAAcC,OAAQA,EAAQN,SAhCZ,SAAAqE,GACxB,OAAOvB,EAAYuB,MAgCb,cAAC,EAAD,CAAQxE,QAASuD,OAEjB,KACHpD,GACC,cAAC,EAAD,CACE4B,QAAS,WACPkB,EAAY,OAFhB,SAKE,qBAAK3C,IAAKH,EAAUI,IAAI,UCjHlCkE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxD,SAASyD,eAAe,W","file":"static/js/main.a3546729.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [imageName, setImageName] = useState('');\n\n  const handleNameChange = event =>\n    setImageName(event.currentTarget.value.toLowerCase());\n\n  const handleSabmit = event => {\n    event.preventDefault();\n\n    if (imageName.trim() === '') {\n      toast.error('Enter a name for the picture!');\n      return;\n    }\n    onSubmit(imageName);\n    setImageName('');\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSabmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          name=\"imageName\"\n          // autocomplete=\"off\"\n          // autofocus\n          placeholder=\"Search images and photos\"\n          value={imageName}\n          onChange={handleNameChange}\n        />\n      </form>\n    </header>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ onClick }) => {\n  return (\n    <>\n      <button className=\"Button\" onClick={onClick}>\n        Load more\n      </button>\n    </>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({ image, largeImg }) => {\n  const { webformatURL, tags } = image;\n  return (\n    <li onClick={largeImg} className=\"ImageGalleryItem\">\n      <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  largeImg: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      webformatURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport PropTypes from 'prop-types';\n\nexport default function ImageGallery({ images, largeImg }) {\n  return (\n    <>\n      <ul className=\"ImageGallery\">\n        {images.map(image => {\n          return (\n            <ImageGalleryItem\n              key={image.id}\n              image={image}\n              largeImg={() => {\n                largeImg(image.largeImageURL);\n              }}\n            />\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n\n// export class OldImageGallery extends Component {\n//   render() {\n//     const { images, largeImg } = this.props;\n\n//     return (\n//       <>\n//         <ul className=\"ImageGallery\">\n//           {images.map(image => {\n//             return (\n//               <ImageGalleryItem\n//                 key={image.id}\n//                 image={image}\n//                 largeImg={() => {\n//                   largeImg(image.largeImageURL);\n//                 }}\n//               />\n//             );\n//           })}\n//         </ul>\n//       </>\n//     );\n//   }\n// }\n\nImageGallery.propTypes = {\n  largeImg: PropTypes.func.isRequired,\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      // key: PropTypes.number.isRequired,\n      // largeImg: PropTypes.string.isRequired,\n      // image: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\n// export default ImageGallery;\n","export default __webpack_public_path__ + \"static/media/Cat-cry.554e214c.jpg\";","import React from 'react';\nimport errorImage from './Cat-cry.jpg';\nimport './ImageError.scss';\nimport PropTypes from 'prop-types';\n\nconst ImageError = ({ message }) => {\n  return (\n    <div role=\"alert\" className=\"image-error\">\n      <img src={errorImage} width=\"240\" alt=\"Cat-cry\" />\n      <p>{message}</p>\n    </div>\n  );\n};\n\nImageError.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default ImageError;\n","import { useEffect } from 'react';\n// import PropTypes from \"prop-types\";\nimport { createPortal } from 'react-dom';\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = props => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    console.log('Modal');\n  });\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      props.onClose();\n    }\n  };\n  const handleBlackDropClick = e => {\n    if (e.target === e.currentTarget) {\n      props.onClose();\n    }\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleBlackDropClick}>\n      <div className=\"Modal\">{props.children}</div>\n    </div>,\n    modalRoot,\n  );\n};\nModal.propTypes = {\n  // onClick: PropTypes.func.isRequired,\n};\nexport default Modal;\n","const API_KEY = '21988624-a694c57feb3b9caad270c2fa0';\nconst BASE_URL = 'https://pixabay.com/api';\n\nfunction fetchImage(imageName, page) {\n  return fetch(\n    `${BASE_URL}/?q=${imageName}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json().then(data => data.hits);\n    }\n  });\n  //header\n}\n\nconst imageAPI = { fetchImage };\n\nexport default imageAPI;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { ToastContainer } from 'react-toastify';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.scss';\nimport Searchbar from '../Searchbar/Searchbar';\nimport Button from '../Button/Button';\nimport ImageGallery from '../ImageGallery';\nimport ImageError from '../ImageError';\nimport Modal from '../Modal';\nimport imageAPI from '../../services/ImageApi';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default function App() {\n  const [imageName, setImageName] = useState('');\n  const [images, setImages] = useState([]);\n  const [error, setError] = useState(null);\n  const [largeImg, setLargeImg] = useState(null);\n  const [page, setPage] = useState(1);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [currentName, setCurrentName] = useState('');\n\n  const fetchApi = useCallback(() => {\n    imageAPI\n      .fetchImage(currentName, page)\n      .then(result => {\n        setImageName('');\n        setStatus(Status.RESOLVED);\n        setImages(images => [...images, ...result]);\n        setPage(page => page + 1);\n        if (!result.length) {\n          setError(`  No picture with name :  ${imageName}`);\n          setStatus(Status.REJECTED);\n        } else {\n          setError(null);\n        }\n      })\n      .catch(error => {\n        setError(` No picture with name :  ${imageName}`);\n        setStatus(Status.REJECTED);\n      })\n      .finally(() => {\n        myScroll();\n      });\n  }, [setStatus, setError, setImages, imageName, page, currentName]);\n\n  useEffect(() => {\n    if (!imageName) {\n      return;\n    }\n\n    setStatus(Status.PENDING);\n    setCurrentName(imageName);\n    if (imageName === currentName) {\n      fetchApi(imageName, page);\n    }\n  }, [imageName, fetchApi, page, currentName]);\n\n  const handleFormSubmit = newImage => {\n    if (newImage !== currentName) {\n      setImageName(newImage);\n      setImages([]);\n      setPage(1);\n    } else {\n      toast.error('This text has already been found!');\n    }\n  };\n\n  const handlerClickImage = url => {\n    return setLargeImg(url);\n  };\n\n  const myScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={handleFormSubmit} />\n      <ToastContainer autoClose={3000} />\n\n      {status === Status.IDLE ? <div>Enter a name for the picture</div> : null}\n\n      {status === Status.PENDING ? (\n        <Loader\n          type=\"Puff\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={3000}\n        />\n      ) : null}\n\n      {status === Status.REJECTED ? <ImageError message={error} /> : null}\n\n      {status === Status.RESOLVED ? (\n        <>\n          <ImageGallery images={images} largeImg={handlerClickImage} />\n          <Button onClick={fetchApi} />\n        </>\n      ) : null}\n      {largeImg && (\n        <Modal\n          onClose={() => {\n            setLargeImg(null);\n          }}\n        >\n          <img src={largeImg} alt=\"\" />\n        </Modal>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}